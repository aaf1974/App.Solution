// <auto-generated />
using System;
using App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace App.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201121174909_postgresTest")]
    partial class postgresTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:postgis", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("App.Domain.Entity.EP.BailiffService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortName")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BailiffServices");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ExecutiveDocumentData")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ExecutiveDocumentNumber")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ExecutiveDocumentRecevingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExecutiveDocumentTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("JudicialWorkId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JudicialWorkId");

                    b.ToTable("EnforcementDocuments");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceeding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BailiffServiceId")
                        .HasColumnType("integer");

                    b.Property<string>("BasisEnding")
                        .HasColumnType("text");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnforcementDocumentId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EnforcementProceedingEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("EnforcementProceedingExicationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EnforcementProceedingNumber")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("EnforcementProceedingReasonEndingId")
                        .HasColumnType("integer");

                    b.Property<int>("EnforcementProceedingRequirementTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("FineSum")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IndebtednessSum")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("SendingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("StateDutySum")
                        .HasColumnType("numeric");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BailiffServiceId");

                    b.HasIndex("EnforcementDocumentId");

                    b.HasIndex("EnforcementProceedingReasonEndingId");

                    b.ToTable("EnforcementProceedings");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceedingBailiffComplain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnforcementProceedingId")
                        .HasColumnType("integer");

                    b.Property<string>("Executive")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("SendingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TextComplain")
                        .IsRequired()
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnforcementProceedingId");

                    b.ToTable("EnforcementProceedingBailiffComplains");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceedingEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnforcementProceedingEventTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("EnforcementProceedingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnforcementProceedingId");

                    b.ToTable("EnforcementProceedingEvents");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceedingReasonEnding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NoteNumber")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<string>("NoteText")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("EnforcementProceedingReasonEnding");
                });

            modelBuilder.Entity("App.Domain.Entity.EnforcementProceedingPenalties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnforcementProceedingId")
                        .HasColumnType("integer");

                    b.Property<decimal>("FineSum")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IndebtednessSum")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("PerformanceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("StateDutySum")
                        .HasColumnType("numeric");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnforcementProceedingId");

                    b.ToTable("EnforcementProceedingPenalties");
                });

            modelBuilder.Entity("App.Domain.Entity.JW.Courthouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CourthouseTypeId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PostAdress")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourthouseTypeId");

                    b.ToTable("Courthouses");
                });

            modelBuilder.Entity("App.Domain.Entity.JW.CourthouseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Code")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CourthouseTypes");
                });

            modelBuilder.Entity("App.Domain.Entity.JW.JudicialWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CaseNumber")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("CollectedFine")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CollectedStateDuty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CollectedSum")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CourtOrderStateDuty")
                        .HasColumnType("numeric");

                    b.Property<int>("CourthouseId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DecisionDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("IndebtednessBeginDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("IndebtednessBeginFinePeriod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("IndebtednessEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("IndebtednessEndFinePeriod")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("IndebtednessFine")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IndebtednessStateDuty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("IndebtednessSum")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("JudicalDecisionTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("JudicalWorkExclusionReasonId")
                        .HasColumnType("integer");

                    b.Property<int>("JudicalWorkTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("OwnerLegalEntityId")
                        .HasColumnType("integer");

                    b.Property<Guid?>("OwnerPhysicalPersonBillingId")
                        .HasColumnType("uuid");

                    b.Property<int?>("OwnerPhysicalPersonId")
                        .HasColumnType("integer");

                    b.Property<int>("PhysicalPersonId")
                        .HasColumnType("integer");

                    b.Property<int?>("RefinancingRateId")
                        .HasColumnType("integer");

                    b.Property<string>("SerialCaseNumber")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("StateBudgetReturnedSum")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("TaxReturnDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("TaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal>("VoluntaryPaymentFine")
                        .HasColumnType("numeric");

                    b.Property<decimal>("VoluntaryPaymentStateDuty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("VoluntaryPaymentSum")
                        .HasColumnType("numeric");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CourthouseId");

                    b.ToTable("JudicialWorks");
                });

            modelBuilder.Entity("App.Domain.Entity.JW.JudicialWorkFine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DaysCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("DebtSum")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Fine")
                        .HasColumnType("numeric");

                    b.Property<bool>("HasPays")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("JudicialWorkPremiseAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Pays")
                        .HasColumnType("numeric");

                    b.Property<int?>("PenaltyBasisPeriodId")
                        .HasColumnType("integer");

                    b.Property<int?>("PenaltyBasisRootPeriodId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PenaltyCoeficient")
                        .HasColumnType("numeric");

                    b.Property<int>("PeriodId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<int?>("RecalculationPeriodId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JudicialWorkPremiseAccountId");

                    b.ToTable("JudicialWorkFines");
                });

            modelBuilder.Entity("App.Domain.Entity.JW.JudicialWorkPremiseAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BillingPersonalAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("JudicialWorkId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JudicialWorkId");

                    b.ToTable("JudicialWorkPremiseAccounts");
                });

            modelBuilder.Entity("App.Domain.Entity.PW.PretensionWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BillingPremiseAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartureMethodId")
                        .HasColumnType("integer");

                    b.Property<int>("IndebtednessPeriodId")
                        .HasColumnType("integer");

                    b.Property<decimal>("IndebtednessSum")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("OwnerLegalEntityId")
                        .HasColumnType("integer");

                    b.Property<int?>("OwnerPhysicalPersonId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PretensionWorks");
                });

            modelBuilder.Entity("App.Domain.Entity.PW.PretensionWorkPremiseAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BillingPersonalAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("IndebtednessPeriodId")
                        .HasColumnType("integer");

                    b.Property<decimal>("IndebtednessSum")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PretensionWorkId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerChangedBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PretensionWorkId");

                    b.ToTable("PretensionWorkPremiseAccounts");
                });

            modelBuilder.Entity("App.Domain.Entity.SampleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("SecontProp")
                        .HasColumnType("text");

                    b.Property<string>("SomeProperty")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SampleModel");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementDocument", b =>
                {
                    b.HasOne("App.Domain.Entity.JW.JudicialWork", "JudicialWork")
                        .WithMany("EnforcementDocuments")
                        .HasForeignKey("JudicialWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceeding", b =>
                {
                    b.HasOne("App.Domain.Entity.EP.BailiffService", "BailiffService")
                        .WithMany("EnforcementProceedings")
                        .HasForeignKey("BailiffServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Entity.EP.EnforcementDocument", "EnforcementDocument")
                        .WithMany()
                        .HasForeignKey("EnforcementDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Entity.EP.EnforcementProceedingReasonEnding", "EnforcementProceedingReasonEnding")
                        .WithMany("EnforcementProceedings")
                        .HasForeignKey("EnforcementProceedingReasonEndingId");
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceedingBailiffComplain", b =>
                {
                    b.HasOne("App.Domain.Entity.EP.EnforcementProceeding", "EnforcementProceeding")
                        .WithMany("EnforcementProceedingBailiffComplains")
                        .HasForeignKey("EnforcementProceedingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.EP.EnforcementProceedingEvent", b =>
                {
                    b.HasOne("App.Domain.Entity.EP.EnforcementProceeding", "EnforcementProceeding")
                        .WithMany("EnforcementProceedingEvents")
                        .HasForeignKey("EnforcementProceedingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.EnforcementProceedingPenalties", b =>
                {
                    b.HasOne("App.Domain.Entity.EP.EnforcementProceeding", "EnforcementProceeding")
                        .WithMany("EnforcementProceedingPenalties")
                        .HasForeignKey("EnforcementProceedingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.JW.Courthouse", b =>
                {
                    b.HasOne("App.Domain.Entity.JW.CourthouseType", "CourthouseType")
                        .WithMany("Courthouses")
                        .HasForeignKey("CourthouseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.JW.JudicialWork", b =>
                {
                    b.HasOne("App.Domain.Entity.JW.Courthouse", "Courthouse")
                        .WithMany("JudicalWorks")
                        .HasForeignKey("CourthouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.JW.JudicialWorkFine", b =>
                {
                    b.HasOne("App.Domain.Entity.JW.JudicialWorkPremiseAccount", "JudicialWorkPremiseAccount")
                        .WithMany("JudicialWorkFines")
                        .HasForeignKey("JudicialWorkPremiseAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.JW.JudicialWorkPremiseAccount", b =>
                {
                    b.HasOne("App.Domain.Entity.JW.JudicialWork", "JudicialWork")
                        .WithMany("JudicialWorkPremiseAccounts")
                        .HasForeignKey("JudicialWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Entity.PW.PretensionWorkPremiseAccount", b =>
                {
                    b.HasOne("App.Domain.Entity.PW.PretensionWork", "PretensionWork")
                        .WithMany("PretensionWorkPremiseAccounts")
                        .HasForeignKey("PretensionWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
